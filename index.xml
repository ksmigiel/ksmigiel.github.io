<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://ksmigiel.com/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 18 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://ksmigiel.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kendo UI Charts renders category axis labels incorrectly for negative series.</title>
      <link>http://ksmigiel.com/2018/09/kendo-charts/</link>
      <pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ksmigiel.com/2018/09/kendo-charts/</guid>
      <description>This post starts new era on my blog. As you might already have noticed, I have decided to change language of new posts to English. Aim is to share my ideas and thoughts with more people, and as side effect, practice my foreign language writing skills. Because I treat this as an experiment, it would be great to get some feedback from you. Also please spot in comments or directly by email any misspelling or grammatical error (and any other of course).</description>
    </item>
    
    <item>
      <title>Aplikacja konsolowa w .NET Core</title>
      <link>http://ksmigiel.com/2018/01/netcore-console/</link>
      <pubDate>Thu, 18 Jan 2018 13:13:09 +0000</pubDate>
      
      <guid>http://ksmigiel.com/2018/01/netcore-console/</guid>
      <description>Zapewne dla tych, którzy mieli styczność z frameworkiem ASP.NET Core zagadnienia takie jak pliki konfiguracyjne projektu, logowanie zdrarzeń i dependency injection nie są żadną nowością. Cała filozofia nowego ASP.NET opiera się na DI i modułowości, a większość poradników właśnie od tego zaczyna.
Ponieważ ostatnio dużo eksperymentuję z .NET Core i Visual Studio Code postanowiłem sprawdzić, czy klasy używane w ASP.NET Core są re-używalne w aplikacji konsolowej.
Okazuje się, że istnieje skończona kombinacja paczek NuGet&amp;rsquo;owych pozwalająca uzyskać taką samą funkcjonalność - zawdzięczamy to architekturze ASP.</description>
    </item>
    
    <item>
      <title>[AKTUALIZACJA] Inicjalizacja Dictionary&lt;TKey, TValue&gt; w C# 6</title>
      <link>http://ksmigiel.com/2017/04/csharp6-dictionary/</link>
      <pubDate>Wed, 05 Apr 2017 20:13:09 +0000</pubDate>
      
      <guid>http://ksmigiel.com/2017/04/csharp6-dictionary/</guid>
      <description>AKTUALIZACJA 17.06.2017 Jak się okazuje &amp;ldquo;it&amp;rsquo;s not a bug, it&amp;rsquo;s a feature!&amp;rdquo;. Dokładnie takie zachowanie, jak opisanie w poście, jest zawarte w specyfikacji języka.
 A member initializer that specifies a collection initializer after the equals sign is an initialization of an embedded collection. Instead of assigning a new collection to the target field, property or indexer, the elements given in the initializer are added to the collection referenced by the target.</description>
    </item>
    
    <item>
      <title>Cuckoo Filters</title>
      <link>http://ksmigiel.com/2017/01/cuckoo-filters/</link>
      <pubDate>Tue, 24 Jan 2017 18:59:09 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2017/01/cuckoo-filters/</guid>
      <description>Cuckoo Filter to probabilistyczna struktura danych - podobnie jak Bloom Filter. W poprzednim poście znajdziecie krótki opis czym taka struktura danych się charakteryzuje (fałszywie dodatki wynik zapytania: &amp;ldquo;czy element zawiera się w danym zbiorze&amp;rdquo;).
O czym mowa? Filtr kukułczy jest relatywnie młodą strukturą danych opisaną w 2014 roku przez Fan, Andersen, Kaminsky i Mitzenmacher. Poszerza ona wspomniane filtry bloom&amp;rsquo;a o usuwanie i zliczanie dodanych elementów, utrzymując przy tym porównywalną złożoność obliczeniową.</description>
    </item>
    
    <item>
      <title>Filtry Blooma</title>
      <link>http://ksmigiel.com/2016/06/bloom-filters/</link>
      <pubDate>Sat, 11 Jun 2016 11:59:09 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2016/06/bloom-filters/</guid>
      <description>Dzisiaj będzie trochę bardziej nisko poziomowo (nie mylić z niższym poziomem posta). Postaram się w przystepny sposób przybliżyć wam czym jest Filtr Blooma i jak można go zaimplementować w JavaScripcie.
Filtra teorie Filtr Blooma to struktura danych pozwalająca w sposób szybki i pamięciowo optymalny odpowiedzieć na pytanie, czy dany element znajduje się w zbiorze. Niestety, ponieważ nie ma nic za darmo, za wydajność musimy zapłacić, a zapłatą będzie błąd w jaki struktura może nas wprowadzić.</description>
    </item>
    
    <item>
      <title>Kontekst i &#39;this&#39; w JavaScripcie</title>
      <link>http://ksmigiel.com/2016/03/js-this/</link>
      <pubDate>Wed, 30 Mar 2016 21:59:09 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2016/03/js-this/</guid>
      <description>Słówko this, mimo podobieństwa do C# czy Javy, w JavaScripcie działa trochę inaczej niż nam się może wydawać. Kontekst na jaki wskazuje this może być dowolnie zmieniany, a jego nieumiejętne użycie spowodowuje wystąpienie masy błędów w naszej aplikacji. Ustrzec przed nimi można się jedynie rozumiejąc do czego owe this służy i jak się z nim obchodzić. Zapraszam do lektury :)
Implicit binding Mamy tutaj do czynienia z kontekstem zwykłych obiektów.</description>
    </item>
    
    <item>
      <title>Jak naprawiłem rb-gateway</title>
      <link>http://ksmigiel.com/2016/02/rb-gateway/</link>
      <pubDate>Fri, 26 Feb 2016 21:59:09 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2016/02/rb-gateway/</guid>
      <description>Zawsze zastanawiałem się jak to jest, że ci wszyscy programiści open source znajdują czas na pisanie kodu po pracy. Kod open source kojarzył mi się jednoznacznie z czymś darmowym, charytatywnym. Było dla mnie dużym zaskoczeniem, gdy dowiedziałem się o programistach opłacanych m.in przez Red Hat i uświadomiłem wtedy sobie, że otwartość kodu wcale nie sugeruje amatorskiego poziomu. Było to dawno temu, ale ten moment &amp;ldquo;olśnienia&amp;rdquo; pamiętam do dziś.
Open source Jeszcze zanim zacząłem pracować, idea przynależności do projektu programistycznego, takiego z prawdziwego zdarzenia, była czymś ekscytującym.</description>
    </item>
    
    <item>
      <title>Czy Windows może zastąpić Linuxa?</title>
      <link>http://ksmigiel.com/2016/01/powershell/</link>
      <pubDate>Thu, 28 Jan 2016 21:59:09 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2016/01/powershell/</guid>
      <description>Lata temu przeżywałem okres fascynacji Linuxem. Pierwszą dystrybucją, którą zainstalowałem bodajże z 5 płyt CD był Mandrake Linux (kontynuowany jako Mandriva - obecnie nie jest już utrzymywana). Potem, o ile mnie pamięć nie myli, był Slackware i Slax (jego mniejszy kuzyn-portable).
Linuxy i konsola Bardzo lubiłem dystrybucje Live CD. Wszystko zaczęło się, gdy popsułem bootloadera z instalacją Windows XP i przez kilka dni w domu nikt nie mógł używać komputera (no poza mną - linuksiarzem).</description>
    </item>
    
    <item>
      <title>Rok blogowania...</title>
      <link>http://ksmigiel.com/2016/01/rocznica/</link>
      <pubDate>Wed, 20 Jan 2016 20:03:40 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2016/01/rocznica/</guid>
      <description>Cóż, czas tak szybko i nieubłaganie płynie, że nawet przegapiłem &amp;ldquo;oficjalną&amp;rdquo; rocznicę bloga, która miała miejsce 2 dni temu (18.01.2016) - wtedy też powstał pierwszy post. Początek kariery pisarza był pierwszym przejawem przełamania się i wyjścia ze swojej strefy komfortu, aby zacząć działać w szeroko pojętym &amp;ldquo;community&amp;rdquo;.
Przez ten rok zdążyłem zmienić pracę, pojeździć po paru konferencjach, pobywać na lokalnych meetup&amp;rsquo;ach, devtalkować no i oczywiście naskrobać parę postów. Gdy zaczynałem tę całą przygodę planowałem pisać dużo częściej, ale oczywiście zawsze znalazły się jakieś przeszkadzacze dnia codziennego, które skutecznie odciągały mnie od tworzenia wpisów.</description>
    </item>
    
    <item>
      <title>U-SQL i Azure Data Lake</title>
      <link>http://ksmigiel.com/2015/12/u-sql/</link>
      <pubDate>Sun, 20 Dec 2015 20:26:38 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2015/12/u-sql/</guid>
      <description>Nie skłamię twierdząc, że Big Data jest obok IoT, machine learningu czy drukowania 3D w top 5 jeśli chodzi o modne pojęcia i zagadnienia wyznaczające trendy w świecie IT, tworzące nowe gałęzie w tej dziedzinie. Ponieważ Microsoft w ostatnim czasie realizuje politykę bycia &amp;ldquo;na topie&amp;rdquo; (publiczne repozytoria na GitHub&amp;rsquo;ie, .NET na Linuxie - DNX i Kestrel etc.) nie mogło ich też zabraknąć w tak gorącym temacie jakim jest obecnie Big Data.</description>
    </item>
    
    <item>
      <title>Kulisy DevTalka cz. 2</title>
      <link>http://ksmigiel.com/2015/11/devtalk-cz2/</link>
      <pubDate>Wed, 18 Nov 2015 17:26:38 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2015/11/devtalk-cz2/</guid>
      <description>Dzisiaj przedstawię proces powstawania odcinka DevTalk&amp;rsquo;a od strony audio-technicznej. Nie zabraknie obrazków i orientalnych pojęć, więc każdy znajdzie coś dla siebie - nudy nie bedzię :)
Przygotowanie projektu Pierwsze co robię przed przystąpieniem do jakiejkolwiek pracy nad nowym odcinkiem DevTalk&amp;rsquo;a jest przygotowanie projektu:
 opisuję ścieżki (ang. tracks) i koloruję je, żebym wiedział co jest czym. synchronizuję - rozkładam je odpowiednio w czasie, odtwarzając przy tym naturalny przebieg rozmowy (rozmowa prowadzona przez Skype, jednakże ścieżki są zgrywane osobno).</description>
    </item>
    
    <item>
      <title>Kulisy DevTalka cz. 1</title>
      <link>http://ksmigiel.com/2015/09/devtalk-cz1/</link>
      <pubDate>Fri, 25 Sep 2015 17:26:38 +0200</pubDate>
      
      <guid>http://ksmigiel.com/2015/09/devtalk-cz1/</guid>
      <description>Tak jak obiecywałem w poprzednim poście - nadszedł moment na podsumowanie ubiegłego roku podcastowego. Z perspektywy czasu żałuję, że nie prowadziłem szczegółowych statystyk (chociażby takich jak sumaryczny czas spędzony w edytorze audio), ale postaram się to jakoś poglądowo wyestymować :).
W części pierwszej opiszę sprzęt z jakiego korzystałem z krótkim opisem co to jest (szczególnie dla czytelników niezaznajomionych z branżą pro-audio). W części drugiej postaram się krótko, lecz treściwie przedstawić proces produkcji odcinka podcasta (załadowanie ścieżek, wyrównanie poziomów głośności i normalizacja, efekty - (odszumianie, equalizacja, kompresja), edycja, mastering i render).</description>
    </item>
    
    <item>
      <title>Koniec odpoczynku</title>
      <link>http://ksmigiel.com/2015/09/koniec-odpoczynku/</link>
      <pubDate>Wed, 09 Sep 2015 10:26:38 +0200</pubDate>
      
      <guid>http://ksmigiel.com/2015/09/koniec-odpoczynku/</guid>
      <description>&amp;ldquo;Oficjalne&amp;rdquo; wakacje skończyły się już grubo ponad tydzień temu, a ja ciągle zwlekałem z napisaniem kolejnego posta. Od ostatniego wpisu minęło parę miesięcy i choć nawet nie wiem kiedy ten czas zleciał, to wcale nie znaczy, że nic się w tym okresie nie wydarzyło. Zanim jednak przejdę do konkretów: Maćkowi Aniserowiczowi należą się szczere podziękowania, bo jego ostatni post skutecznie zmotywował mnie do &amp;ldquo;pobudki&amp;rdquo;.
Nowa praca Jak to w karierze programisty bywa, zmiana pracodawcy nie jest niczym zaskakującym.</description>
    </item>
    
    <item>
      <title>TypeScript i pliki definicji</title>
      <link>http://ksmigiel.com/2015/05/jsblocks-dts/</link>
      <pubDate>Sat, 23 May 2015 18:18:10 +0200</pubDate>
      
      <guid>http://ksmigiel.com/2015/05/jsblocks-dts/</guid>
      <description>Dzisiaj chciałem przybliżyć kwestię plików definicji do TypeScript. Jeśli zdarzyło wam się pracować z tym językiem, to na pewno wiecie o czym mówię. Jeśli natomiast nie macie pojęcia co to jest - zapraszam do lektury!
TypeScript - typowany JavaScript TypeScript to język kompilowany do JS&amp;rsquo;a prosto od Microsoftu. W wielkim skrócie pozwala na definiowanie typów dla zmiennych, co za tym idzie, deklarowanie klas i interfejsów. Chyba nie trzeba tłumaczyć jakim ułatwieniem staje się taka możliwość w pracy każdego programisty, dla którego środowisko &amp;ldquo;js&amp;rsquo;owe&amp;rdquo; nie jest codziennością, a przychodzi ze świata &amp;ldquo;mocno typowanego&amp;rdquo; (C#, Java, cpp).</description>
    </item>
    
    <item>
      <title>Visual Studio Code</title>
      <link>http://ksmigiel.com/2015/05/vs-code/</link>
      <pubDate>Thu, 14 May 2015 16:38:00 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2015/05/vs-code/</guid>
      <description>Microsoft na tegorocznej konferencji //build/ zaskoczył nas paroma nowinkami. Jeśli nie jesteście na bieżąco polecam zerknąć na podsumowanie. Każdy znajdzie coś dla siebie.
VS Code Mnie osobiście najbardziej spodobał się edytor Visual Studio Code, czyli taki Sublime Text w Microsoftowym wydaniu. W całości oparty na node.js i edytorze Atom od GitHuba, a konkretnie na bibliotece Electron umożliwiającej pisanie cross-platformowych desktopowych aplikacji w JS/HTML/CSS. Główne cechy wyróżniające Code na tle innych edytorów to m.</description>
    </item>
    
    <item>
      <title>&#34;R&#34;omeo i Julia</title>
      <link>http://ksmigiel.com/2015/03/romeo-i-julia/</link>
      <pubDate>Sat, 21 Mar 2015 21:38:00 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2015/03/romeo-i-julia/</guid>
      <description>Każdy wie, że Excel to potężne narzędzie i odpowiednio użyte potrafi wspomóc niejeden proces. Wykorzystywany namiętnie w korporacjach do analizy danych i oglądania filmów (tak tak, pewien użytkownik reddita świetnie ominął wszelkie zabezpieczenia i wykorzystując klasyczne Windows API - metodę mciSendStringA w winmm.dll - napisał player w VBA1!). Niestety większość arkuszy to prawdziwe potwory, które potrafią śnić się po nocach: przedziwne zagnieżdżone formuły, pstrokate kolorki. Nie da się tym w żaden sposób zarządzać.</description>
    </item>
    
    <item>
      <title>Hadoop Streaming w F#</title>
      <link>http://ksmigiel.com/2015/02/hadoop-streaming/</link>
      <pubDate>Tue, 17 Feb 2015 21:51:00 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2015/02/hadoop-streaming/</guid>
      <description>Klasyczny Hadoop posiada zestaw klas Javowych, dzięki którym możemy napisać swoje pierwsze zadanie MapReduce. Jak zaglądniecie do dokumentacji, to przekonacie się, że nie jest to najwygodniejsze rozwiązanie, ale świetnie nadaje się jako materiał do nauki. Przy zastosowaniach produkcyjnych zdecydowanie lepiej zwrócić się w stronę narzędzi takich jak Hive, Pig czy Scalding. Za pomocą specyficznej dla każdego składni można tworzyć zaawansowane analizy bez potrzeby pisania kodu low-level w Javie, np. HiveQL jest językiem zbliżonym do SQL, a Pig Lating ciekawym językiem proceduralnym.</description>
    </item>
    
    <item>
      <title>MapReduce - wstęp</title>
      <link>http://ksmigiel.com/2015/01/map-reduce/</link>
      <pubDate>Fri, 23 Jan 2015 18:16:13 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2015/01/map-reduce/</guid>
      <description>Zapewne słyszeliście o MapReduce, a jeśli nie, to teraz macie okazję poczytać. MapReduce jest frameworkiem służącym do przetwarzania dużych zbiorów danych w sposób zrównoleglony. Ostatnimi czasy stał się bardzo popularny dzięki platformom takim jak Hadoop (o nim w kolejnym poście) czy Spark. Wykorzystywany jest wszędzie tam, gdzie dane liczy się w terabajtach. Duże firmy produkują dużo danych, więc znajduje on zastosowanie np. w Google czy Spotify.
Funkcyjnie Na początku chciałem wspomnieć o dwóch ważnych rzeczach: map() i reduce().</description>
    </item>
    
    <item>
      <title>Pierwszy post...</title>
      <link>http://ksmigiel.com/2015/01/pierwszy-post/</link>
      <pubDate>Sun, 18 Jan 2015 18:44:12 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2015/01/pierwszy-post/</guid>
      <description>Cześć! Pomysł na stworzenie bloga chodził mi już jakiś czas po głowie, ale jak to z pomysłami bywa, trochę czasu upłynęło zanim przeszedłem z fazy planingu do fazy implementacji. Nowy rok wydaje się być idealnym momentem na rozpoczęcie czegoś nowego w swoim życiu, więc korzystając z okazji zarejestrowałem domenę i zacząłem szukać hostingu / platformy blogowej, która by mi odpowiadała. Miałem kiedyś styczność z WordPressem, ale potrzebowałem alternatywy lekkiej, prostej i najlepiej minimalistycznej.</description>
    </item>
    
    <item>
      <title>O mnie</title>
      <link>http://ksmigiel.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ksmigiel.com/about/</guid>
      <description>Zawodowo jestem programistą w Medius. Uwielbiam poznawać nowe technologie, dlatego ciągle poszerzam swój warsztat programistyczny o nowinki ze świata szeroko pojętego &amp;ldquo;dev&amp;rdquo;. Moje zainteresowania ciągną się od webdev po data science, i na tym blogu poruszanie się po tych dziedzinach będę opisywać :)
Prywatnie natomiast grywam na skrzypcach w paru zespołach oraz bawię się edytorami audio (mixing, mastering, czyli wszystko co związane z przetwarzaniem dźwięku). Mam na swoim koncie zrealizowaną płytę zespołu Egos, której utwory były grane na antenie m.</description>
    </item>
    
  </channel>
</rss>