<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fsharp on </title>
    <link>http://ksmigiel.com/tags/fsharp/</link>
    <description>Recent content in Fsharp on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 17 Feb 2015 21:51:00 +0100</lastBuildDate>
    
	<atom:link href="http://ksmigiel.com/tags/fsharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hadoop Streaming w F#</title>
      <link>http://ksmigiel.com/2015/02/hadoop-streaming/</link>
      <pubDate>Tue, 17 Feb 2015 21:51:00 +0100</pubDate>
      
      <guid>http://ksmigiel.com/2015/02/hadoop-streaming/</guid>
      <description>Klasyczny Hadoop posiada zestaw klas Javowych, dzięki którym możemy napisać swoje pierwsze zadanie MapReduce. Jak zaglądniecie do dokumentacji, to przekonacie się, że nie jest to najwygodniejsze rozwiązanie, ale świetnie nadaje się jako materiał do nauki. Przy zastosowaniach produkcyjnych zdecydowanie lepiej zwrócić się w stronę narzędzi takich jak Hive, Pig czy Scalding. Za pomocą specyficznej dla każdego składni można tworzyć zaawansowane analizy bez potrzeby pisania kodu low-level w Javie, np. HiveQL jest językiem zbliżonym do SQL, a Pig Lating ciekawym językiem proceduralnym.</description>
    </item>
    
  </channel>
</rss>